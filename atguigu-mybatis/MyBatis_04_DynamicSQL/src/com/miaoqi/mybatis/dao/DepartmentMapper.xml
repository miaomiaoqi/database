<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miaoqi.mybatis.dao.DepartmentMapper">
    <select id="getDeptById" resultType="com.miaoqi.mybatis.bean.Department">
        select id, dept_name departmentName from tbl_dept where id = #{id}
    </select>

    <resultMap type="com.miaoqi.mybatis.bean.Department" id="MyDept2">
        <id column="id" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <!-- collection: 分步查询 -->
        <collection property="emps" select="com.miaoqi.mybatis.dao.EmployeeMapperPlus.getEmpsByDeptId"
                    column="{deptId=id}" fetchType="lazy"></collection>
    </resultMap>

    <resultMap type="com.miaoqi.mybatis.bean.Department" id="MyDept1">
        <id column="id" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <!-- collection: 定义关联集合类型的属性封装规则 
            ofType: 指定集合元素的类型
        -->
        <collection property="emps" ofType="com.miaoqi.mybatis.bean.Employee">
            <id column="eid" property="id"/>
            <result column="last_name" property="lastName"/>
            <result column="email" property="email"/>
            <result column="gender" property="gender"/>
        </collection>
    </resultMap>

    <select id="getDeptByIdPlus" resultMap="MyDept2">
        select d.id id, d.dept_name dept_name, e.id eid, e.last_name last_name, e.email email, e.gender gender
        from tbl_dept d
        left join tbl_employee e on d.id = e.dept_id
        where d.id = #{id }
    </select>

    <!-- 扩展, 多列的值传递
        将多列的值封装map传递:
        column="{key1=column1, key2=column2}"
        fetchType="lazy": 表示使用延迟加载
                - lazy: 延迟
                - eager: 立即
     -->

</mapper>